# Disables browser translation

--- a/components/translate/content/renderer/translate_helper.cc
+++ b/components/translate/content/renderer/translate_helper.cc
@@ -73,8 +73,7 @@ TranslateHelper::TranslateHelper(content
     : content::RenderFrameObserver(render_frame),
       world_id_(world_id),
       extension_scheme_(extension_scheme) {
-  translate_task_runner_ = this->render_frame()->GetTaskRunner(
-      blink::TaskType::kInternalTranslation);
+  CancelPendingTranslation();
 }
 
 TranslateHelper::~TranslateHelper() {
--- a/components/translate/core/browser/translate_manager.cc
+++ b/components/translate/core/browser/translate_manager.cc
@@ -692,8 +692,7 @@ void TranslateManager::FilterIsTranslate
         TranslateBrowserMetrics::INITIATION_STATUS_NO_NETWORK);
   }
 
-  if (!ignore_missing_key_for_testing_ &&
-      !::google_apis::HasAPIKeyConfigured()) {
+  if (true) {
     // Without an API key, translate won't work, so don't offer to translate in
     // the first place. Leave prefs::kOfferTranslateEnabled on, though, because
     // that settings syncs and we don't want to turn off translate everywhere
--- a/components/translate/core/browser/translate_script.cc
+++ b/components/translate/core/browser/translate_script.cc
@@ -149,9 +149,8 @@ void TranslateScript::OnScriptFetchCompl
     base::StringAppendF(&data_, "var serverParams = '%s';\n",
                         server_params.c_str());
 
-    GURL security_origin = translate::GetTranslateSecurityOrigin();
     base::StringAppendF(
-        &data_, "var securityOrigin = '%s';", security_origin.spec().c_str());
+        &data_, "var securityOrigin = '';");
 
     // Load embedded translate.js.
     data_.append(ui::ResourceBundle::GetSharedInstance().LoadDataResourceString(
